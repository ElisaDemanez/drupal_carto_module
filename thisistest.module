<?php

/**
* @file
* Display help and module information.
* @param path
*   Which path of the site we're displaying help.
* @param arg
*   Array that holds the current path as would be returned from arg() function.
* @return
*   help text for the path.
*/
 
function thisistest_help($path, $arg) {
 $output = '';  //declare your output variable
  switch ($path) {
    case "admin/help#   ":
      $output = '<p>'.  t("Displays links to nodes created thisistest") .'</p>';
      break;
  }
  return $output;
}
function thisistest_menu() {

  $items = array();

  $items['admin/settings/thisistest'] = array(
    'title' => 'thisistest module settings',
    'description' => 'Description of your thisistest settings page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('thisistest_admin'),
    'access arguments' => array('administer thisistest settings'),
    'type' => MENU_NORMAL_ITEM,
   );

    $items['thisistest/map/create'] = array(
    'title' => 'Nouvelle carte interactive',
    'description' => 'Description of thispage',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('map_form'),
    'access arguments' => array('administer thisistest settings'),
    'type' => MENU_NORMAL_ITEM,     
  );

   $items['thisistest/map/read'] = array(
    'title' => 'Cartes interactives',
    'description' => 'Description of thispage',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('map_read'),
    'access arguments' => array('administer thisistest settings'),
    'type' => MENU_NORMAL_ITEM,     
  );


  return $items;
}


function thisistest_admin() {
  $form = array();

  $form['thisistest_maxdisp'] = array(
    '#type' => 'textfield',
    '#title' => t("Record of hours I've worked without chatting on slack"),
    '#default_value' => variable_get('thisistest_maxdisp', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t("Interesting. So you're a failure"),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function map_read() { 

  $content= array();

    $query = "SELECT * FROM thisistest_maps ";
                 
        $query_result = db_query($query, $start_time, $end_time);
        
        var_dump($query_result);
        //Set Block content
        while ($links = db_fetch_object($query_result)) {
          var_dump($links, $links->name);
            $content .= $links->name;
            $content .= "<br />";
        };
        return $content;
}

function map_form() { 
  $form['name'] = array(         
    '#type' => 'textfield',         
    '#title' => t('Name'),         
    '#required' => TRUE,     
  ); 
    $form['description'] = array(         
    '#type' => 'textarea',         
    '#title' => t('Description'),         
    '#required' => TRUE,    
    '#description' => t("/** A compléter **/ "), 
  ); 
  $form['categories_displayed'] = array(         
    '#type' => 'checkbox',         
    '#title' => t('Afficher le menu'),         
    '#required' => TRUE,     
    '#description' => t("À cocher pour que les visiteurs aient accès aux catégories. Le cas échéant tout les points seront affichés. "),
    
  ); 
  $form['submit'] = array(         
    '#type' => 'submit',         
    '#value' => t('Send')     
  );      
  return $form; 
}


function map_form_submit($form, $form_state) { 

    $data = array(
    'name' => $form_state['values']['name'],
    'description' => $form_state['values']['description'],
    'secondary_color' => $form_state['values']['name'],
    'categories_displayed' =>  $form_state['values']['categories_displayed'],
    'created_at' => '2018-07-13 00:00:00',
    'modified_at' => '2018-07-13 00:00:00',
    'created_by' => $form_state['values']['name'],
    


  );
  drupal_write_record('thisistest_maps', $data);  
   drupal_set_message(t('Your form has been saved.'));

}